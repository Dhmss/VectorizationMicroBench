/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class polynomialComputation_polyEval */

#ifndef _Included_polynomialComputation_polyEval
#define _Included_polynomialComputation_polyEval
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     polynomialComputation_polyEval
 * Method:    jni_avxu
 * Signature: ([D[D[DII)V
 */
JNIEXPORT void JNICALL jni_avxu
(JNIEnv *, jclass, jdoubleArray, jdoubleArray, jdoubleArray, jint, jint);

/*
 * Class:     polynomialComputation_polyEval
 * Method:    jni_avxa
 * Signature: ([D[D[DII)V
 */
JNIEXPORT void JNICALL jni_avxa
(JNIEnv *, jclass, jdoubleArray, jdoubleArray, jdoubleArray, jint, jint);

/*
 * Class:     polynomialComputation_polyEval
 * Method:    jni_basic
 * Signature: ([D[D[DII)V
 */
JNIEXPORT void JNICALL jni_basic
(JNIEnv *, jclass, jdoubleArray, jdoubleArray, jdoubleArray, jint, jint);

/*
 * Class:     polynomialComputation_polyEval
 * Method:    registerNatives
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_polynomialComputation_polyEval_registerNatives
(JNIEnv *, jclass);

/*
 * Class:     polynomialComputation_polyEval
 * Method:    native_jni_avxu
 * Signature: ([DJJII)V
 */
JNIEXPORT void JNICALL native_jni_avxu
(JNIEnv *, jclass, jdoubleArray, jlong, jlong, jint, jint);

#ifdef __cplusplus
}
#endif
#endif
